@page "{id?}"
@model ApiForTest.Pages.Unit.newUnitModel
@{
}
<!DOCTYPE html>
<html>
<head>
    <title>Новая ед. измерения</title>
    <link rel="stylesheet" href="/css/site.css" />
</head>
<body>
    <div class="navigation">
        <h1><a class="aLinkMain" href="/">Склад</a></h1>

        <div class="btn-group">
            <a class="aLink btn" href="/Receipts/Receipts">Поступления</a>
        </div>

        <h1>Справочники</h1>

        <div class="btn-group">
            <a class="aLink btn" href="/Unit/Unit">Еденицы измерения</a>
            <a class="aLink btn" href="/Resource">Ресурсы</a>
        </div>
    </div>
    <div class="main">
        <h1 style="color: black;">Новая еденица измерения</h1>

        <div class="newItem">
            <input id="nwItem" type="text" />
            <button id="saveBtn">Сохранить</button>
        </div>

        <div class="additionalFunc">
            <button id="updateBtn" onclick="updateFunc()">Сохранить</button>
            <button id="deleteBtn" onclick="deleteFunc()">Удалить</button>
            <button id="archiveBtn" onclick="archiveFunc()">В архив</button>
            <button id="fromArchiveBtn" onclick="fromArchiveFunc()">Из архива</button>
        </div>
     </div>

     <script>
         async function fromArchiveFunc() {
             const response = await fetch(`/api/unit/fromArchiveUnit/${@Model.Id}`, {
                 method: 'PUT'
             });
             if (!response.ok) {
                 alert("Ошибка");
                 return;
             }
            window.location.href = '/Unit/Unit';
         }
     </script>
    <script>
        async function updateFunc() {
            const result = document.getElementById("nwItem").value;

            const response = await fetch(`/api/Unit/updateUnit/${@Model.Id}`, {
                method: 'PUT',
                headers: {
                    'Content-type': 'application/json'
                },
                body: JSON.stringify({ name: result })
            });

            if (!response.ok) {
                alert("Ошибка");
                return;
            }
            window.location.href = '/Unit/Unit';
        }
    </script>
    <script>
        async function deleteFunc() {
            const response = await fetch(`/api/Unit/${@Model.Id}`, {
                method: 'DELETE'
            });

            if (!response.ok) {
                alert("Такого нет");
                return;
            }
            window.location.href = '/Unit/Unit';
        }
    </script>
    <script>
        async function archiveFunc() {
            const response = await fetch(`/api/unit/archiveUnit/${@Model.Id}`, {
                method: 'PUT'
            });

            if (!response.ok) {
                alert("Ошибка");
                return;
            }
            window.location.href = '/Unit/Unit';
        }
    </script>
    <script>
        async function getId() {
            const Id = "@Model.Id";

            if (Id) {
                const selectInput = document.querySelector("#nwItem");
                selectInput.style.width = '330px';
                const selectSaveBtn = document.querySelector("#saveBtn");
                selectSaveBtn.style.display = 'none';

                const response = await fetch(`/api/Unit/${Id}`);
                const data = await response.json();

                if (data.state === false) {
                    const selectFromArchive = document.querySelector("#fromArchiveBtn");
                    selectFromArchive.style.display = 'none';
                }
                else{
                    const selectArchiveBtn = document.querySelector("#archiveBtn");
                    selectArchiveBtn.style.display = 'none';
                }
                const select = document.querySelector("#nwItem");
                select.value = data.name;
            }
            else {
                const selectUpdateBtn = document.querySelector("#updateBtn");
                selectUpdateBtn.style.display = 'none';

                const selectDeleteBtn = document.querySelector("#deleteBtn");
                selectDeleteBtn.style.display = 'none';

                const selectArchiveBtn = document.querySelector("#archiveBtn");
                selectArchiveBtn.style.display = 'none';
            }
        }
        getId();
    </script>

        <script>
            document.getElementById('saveBtn').addEventListener('click', async () => {
                const value = document.getElementById('nwItem').value.trim();

                if (!value) {
                    alert('Введите значение');
                    return;
                }

                const response = await fetch("/api/Unit", {
                    method: 'Post',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name: value })
                });

                if (!response.ok) {
                    throw new Error('Ошибка при отправке данных');
                }

                window.location.href = '/Unit/Unit';
            });
        </script>
</body>
</html>
